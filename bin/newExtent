#! /usr/bin/env bash
#=========================================================================
# Copyright (c) 2014, 2015, 2016 GemTalk Systems, LLC <dhenrich@gemtalksystems.com>.
#
#   MIT license: https://github.com/GsDevKit/GsDevKit_home/blob/master/license.txt
#=========================================================================

theArgs="$*"
source "${GS_HOME}/bin/private/shFeedback"
start_banner 

usage() {
  cat <<HELP
USAGE: $(basename $0) [-h] [-n] [-t|-a] [-s <snapshot-file-path>] <stone-name>

Copy a new extent into the named stone's extent directory and delete tranlogs in
the tralogs directory. The stone will be stopped before doing the copy and after
the copy is complete, the stone will be restarted with the -N option.

If the -s option is not specified, \$GEMSTONE/bin/extent0.seaside.dbf will be 
used as the initial extent.

With the -n option, the stone is not restarted, the <snapshot-file-path> is 
required and tranlogs are not removed.

Please read the 'How to Restore from Backup' section of the System 
Administration manual (http://downloads.gemtalksystems.com/docs/GemStone64/3.2.x/GS64-SysAdmin-3.2/GS64-SysAdmin-3.2.htm?http://downloads.gemtalksystems.com/docs/GemStone64/3.2.x/GS64-SysAdmin-3.2/9-BackupAndRestore.htm#pgfId-999128)
before using the -n option.

With the -t option, the extent file is assumed to already have tODE installed.
The extent will be be attached to the tode directory structure for <stone-name>:

  \$GS_TODE/sys/stones/<stone-name> 

OPTIONS
  -h
     display help
  -n
     No startStone. <snapshot-file-path> required. Please read the 'How to 
     Restore from Backup' section of the System Administration manual
     (http://downloads.gemtalksystems.com/docs/GemStone64/3.2.x/GS64-SysAdmin-3.2/GS64-SysAdmin-3.2.htm?http://downloads.gemtalksystems.com/docs/GemStone64/3.2.x/GS64-SysAdmin-3.2/9-BackupAndRestore.htm#pgfId-999128)
     before using the -n option.
  -s <snapshot-file-path> 
     Path to snapshot file used to create stone. Path may be a relative file 
     path.
  -t
     Attach image to the \$GS_TODE/sys/stones/<stone-name> directory structure,
     using the rebuildServerTode client script 
     (see \$GS_HOME/sys/default/client/tode-scripts/rebuildServerTode).
     Should be used with the -s option.
  -a
     Similar to -t option, except that the rebuildSys client script is used
     (see \$GS_HOME/sys/default/client/tode-scripts/rebuildSys)

EXAMPLES
  $(basename $0) -h
  $(basename $0) gs_329
  $(basename $0) -s \$GS_HOME/server/snapshots/extent0.tode.3.2.9.dbf gs_329
  $(basename $0) -t -s \$GS_HOME/server/snapshots/extent0.tode.3.2.9.dbf gs_329

HELP
}

PLATFORM="`uname -sm | tr ' ' '-'`"
if [[ "$PLATFORM" == MINGW32_NT* || "$PLATFORM" == MSYS_NT* ]] ; then
  exit_1_banner "This script is a server-only script and cannot be used on Windows"
fi

if [ "${GS_HOME}x" = "x" ] ; then
  exit_1_banner "the GS_HOME environment variable needs to be defined"
fi
source "${GS_HOME}/bin/defGsDevKit.env"
if [ "$GS_SERVER{}x" = "x" ] ; then
  exit_1_banner "the GS_SERVER environment variable needs to be defined. Perhaps a stone has not been create yet?"
fi

source "${GS_HOME}/bin/private/shFunctions"
snapshotFile=""
noRestart="false"
attachTode="false"
attachTodeServer="false"
while getopts "hns:ta" OPT ; do
  case "$OPT" in
    h) usage; exit 0;;
    n) noRestart="true";;
    s) snapshotFile=`realpath "${OPTARG}"` ;; 
    t) attachTode="true";;
    a) attachTodeServer="true";;
    *) usage; exit_1_banner "Unknown option";;
  esac
done
shift $(($OPTIND - 1))

if [ $# -ne 1 ]; then
  usage; exit_1_banner "missing argument"
fi
stoneName=$1


# set up stone environment
stonePath="$GS_SERVER_STONES/$stoneName"
if [ ! -d "$stonePath" ] ; then
  exit_1_banner "The stone $stoneName does not appear to exist."
fi
pushd "$stonePath" >& /dev/null
  source "$stonePath/stone.env"
popd >& /dev/null

echo "Shutdown stone"
"$GS_HOME/bin/stopStone" $stoneName


if [ "${noRestart}" = "false" ] ; then
  echo "Copy snapshot and remove tranlogs"
  "$GS_HOME/bin/devKitCommandLine" newExtent $stoneName "${snapshotFile}"

  # -N option used to ignore tranlog files during restart
  echo "Restarting stone and netldi"
  "$GS_HOME/bin/startStone" -b -N $stoneName

  if [ "${attachTode}" = "true" ] ; then
    "$GS_HOME/bin/todeIt" $stoneName "script --script=rebuildServerTode"
  else
    if [ "${attachTodeServer}" = "true" ] ; then
      "$GS_HOME/bin/todeIt" $stoneName "script --script=rebuildSys"
    fi
  fi
else
  echo "Copy snapshot and leave tranlogs for recovery"
  
  if [ "${snapshotFile}x" = "x" ] ; then
    usage
    exit_1_banner "Must specify <snapshot-file-path>, when using the -n (no restart option). Tranlogs left in $\GS_HOME/gemstone/stones/${stoneName}/tranlogs are not likely to be appropriate for \$GEMSTONE/bin/extent0.seaside.dbf"
  fi
  "$GS_HOME/bin/devKitCommandLine" newExtentForRecovery $stoneName "${snapshotFile}"

  echo "Stone is now ready for recovery. Please read the How to Restore from Backup"
  echo "section of the manual (http://downloads.gemtalksystems.com/docs/GemStone64/3.2.x/GS64-SysAdmin-3.2/GS64-SysAdmin-3.2.htm?http://downloads.gemtalksystems.com/docs/GemStone64/3.2.x/GS64-SysAdmin-3.2/9-BackupAndRestore.htm#pgfId-999128)"
  echo ""
  echo "In the simplest case you can just use the '\$GS_HOME/startGemstone $stoneName'"
  echo "and the system will automatically recover from the tranlogs in the stone's "
  echo "tranlog directory/"
fi

exit_0_banner "...finished"
