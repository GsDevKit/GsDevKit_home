#! /usr/bin/env bash
#=========================================================================
# Copyright (c) 2016 GemTalk Systems, LLC <dhenrich@gemtalksystems.com>.
#
#   MIT license: https://github.com/GsDevKit/GsDevKit_home/blob/master/license.txt
#=========================================================================

theArgs="$*"
source ${GS_HOME}/bin/private/shFeedback
start_banner

usage() {
  cat <<HELP
USAGE: $(basename $0) [-h] <stone-name>
Bootstrap GLASS into an extent0.dbf.

OPTIONS
  -h
     display help
  -E
    enable isNil optimization (leave enabled). upgradeImage enables isNil 
    optimization by default but, there are potential problems with isNil 
    optimization in some Seaside projects, upgradeSeasideImage disables 
    isNil optimiazation unless this options is specified. See 
    https://github.com/GsDevKit/GsDevKit_home/issues/331 for more information

EXAMPLES
   $(basename $0) -h
   $(basename $0) gs_329

HELP
}

if [ "${GS_HOME}x" = "x" ] ; then
  exit_1_banner "the GS_HOME environment variable needs to be defined"
fi
source ${GS_HOME}/bin/defGsDevKit.env

source ${GS_HOME}/bin/private/shFunctions
getOpts_help $@

enableIsNilOptimization="false"
while getopts "E" OPT ; do
  case "$OPT" in
		E) enableIsNilOptimization="true";;
    *) usage; exit_1_banner "Uknown option";;
  esac
done
shift $(($OPTIND - 1))

if [ $# -ne 1 ]; then
  usage; exit_1_banner "wrong number of arguments (1 expected)"
fi
stoneName=$1
shift 1

stonePath=$GS_SERVER_STONES/$stoneName
if [ ! -d "$stonePath" ] ; then
  exit_1_banner "The stone $stoneName does not exist"
fi

if [ "${GS_SYS_LOCAL}x" = "x" ] ; then
  $GS_HOME/bin/private/clone_sys_local
  source ${GS_HOME}/bin/defGsDevKit.env
fi

$GS_HOME/bin/startStone -b $stoneName

# set up stone environment
pushd $stonePath >& /dev/null
  source $stonePath/stone.env
popd >& /dev/null

export upgradeDir=$GEMSTONE/upgrade

$GS_HOME/bin/startTopaz $stoneName -l << EOF
input $GS_HOME/bin/private/prepareBootstrapGLASS.tpz
EOF

if [ "$enableIsNilOptimization" = "false" ]; then
$GS_HOME/bin/startTopaz $stoneName -l << EOF
input $GS_HOME/bin/private/disableIsNilOptimization.tpz
EOF
fi

$GS_HOME/bin/startTopaz $stoneName -l << EOF
input $GS_HOME/bin/private/bootstrapGLASS.tpz
EOF

exit_0_banner "...finished $(basename $0)"
