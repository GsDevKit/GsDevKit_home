#! /usr/bin/env bash
#=========================================================================
# Copyright (c) 2015, 2016 GemTalk Systems, LLC <dhenrich@gemtalksystems.com>.
#
#   MIT license: https://github.com/GsDevKit/GsDevKit_home/blob/master/license.txt
#=========================================================================

theArgs="$*"
source "${GS_HOME}/bin/private/shFeedback"

usage() {
  cat <<HELP
USAGE: $(basename $0) [-h] <directory-path>

Install GCI libraries for all products in  <directory-path>


OPTIONS
  -h 
     display help

EXAMPLES
  $(basename $0) -h
  $(basename $0) \$GS_HOME/shared/pharo/pharo-vm

HELP
}

if [ "${GS_HOME}x" = "x" ] ; then
  exit_1_banner "the GS_HOME environment variable needs to be defined"
fi
source "${GS_HOME}/bin/defGsDevKit.env"

while getopts "h" OPT ; do
  case "$OPT" in
    h) usage; exit 0;;
    *) usage; exit_1_banner "Unknown option";;
  esac
done
shift $(($OPTIND - 1))

if [ $# -lt 1 ]; then
  usage; exit_1_banner "missing required argument"
fi
directoryPath="$1"

pushd "$GS_SHARED_DOWNLOADS/products" >& /dev/null

  echo ""
  for productName in $(find . -maxdepth 1 -type d )
  do
    echo "$productName"

    if [[ "$productName" == ./GemStone64BitClient* ]] ; then
      vers=`echo "$productName" | cut -d'-' -f1 | cut -c22-`
      echo "$productName --> $vers"
      "${GS_HOME}/bin/private/installGci" -d "$directoryPath" -t pharo $vers
    else 
      if [[ "$productName" == ./GemStone64Bit* ]] ; then 
        vers=`echo "$productName" | cut -d'-' -f1 | cut -c16-`
        echo "$productName --> $vers"
        "${GS_HOME}/bin/private/installGci" -d "$directoryPath" -t pharo $vers
      fi
    fi
    if [[ "$productName" == ./GemBuilderC* ]] ; then 
      vers=`echo "$productName" | cut -d'-' -f1 | cut -c14-`
      echo "$productName --> $vers"
      "${GS_HOME}/bin/private/installGci" -d "$directoryPath" -t pharo $vers
    fi
  done

popd >& /dev/null
