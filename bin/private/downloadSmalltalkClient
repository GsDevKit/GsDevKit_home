#! /usr/bin/env bash
#=========================================================================
# Copyright (c) 2014, 2015, 2016 GemTalk Systems, LLC <dhenrich@gemtalksystems.com>.
#
#   MIT license: https://github.com/GsDevKit/GsDevKit_home/blob/master/license.txt
#=========================================================================

theArgs="$*"
source ${GS_HOME}/bin/private/shFeedback
start_banner

usage() {
  cat <<HELP
USAGE: $(basename $0) [-h] [-v Pharo3.0 | Pharo4.0  | Pharo5.0] -d <full-path-to-directory>

Download a Linux or Mac VM, image. and changes file.

OPTIONS
  -h
     display help
  -d <full-path-to-directory>
     <full-path-to-directory> specifies the directory into which the chosen
     pharo version is downloaded
  -v Pharo3.0 | Pharo4.0 | Pharo5.0
     Choose the version of Smalltalk to use for the client. Default is 
     Pharo3.0.

EXAMPLES
  $(basename $0) -h
  $(basename $0) -v Pharo3.0 -d $GS_HOME/shared/pharo
  $(basename $0) -d $GS_HOME/shared/pharo

HELP
}

if [ "${GS_HOME}x" = "x" ] ; then
  exit_1_banner "the GS_HOME environment variable needs to be defined"
fi
source ${GS_HOME}/bin/private/shFunctions
verify_gsdevkit_installation

directoryPath=""
version="Pharo3.0"
while getopts ":hd:v:" OPT ; do
  case "$OPT" in
    h) usage; exit 0;;
    d) directoryPath="${OPTARG}";;
    v) version="${OPTARG}";;
   *) usage; exit_1_banner "Unknown option";;
  esac
done
shift $(($OPTIND - 1))
if [ $# -ne 0 ]; then
  usage; exit_1_banner "No positional arguments expected $*"
fi
if [ "${directoryPath}x" = "x" ]; then
  usage; exit_1_banner "Required option -d not supplied"
fi

echo "Installing $version"

# Detect operating system
PLATFORM="`uname -sm | tr ' ' '-'`"

# Download client
case $version in
  Pharo*)
    if [ -e "$directoryPath/Pharo.image" ]; then
      exit_0_banner "Pharo already installed in $directoryPath"
    fi
    if [ -e "`which curl`" ] ; then
      cmd="`which curl` "
    else
      if [ -e "`which wget`" ]; then
        cmd="`which wget` -O- "
      else
        exit_1_banner "Error: Neither curl not wget is not available. Install wget or curl and rerun this script."
      fi
    fi
    pushd $directoryPath >& /dev/null
      case $version in
        Pharo3.0)
          case "$PLATFORM" in
            MSYS_NT*|MINGW32_NT*|MINGW64_NT*)
              cmd=`which curl`
              $cmd -O http://files.pharo.org/platform/Pharo3.0-win.zip
              unzip -j -q Pharo3.0-win.zip
              mv Pharo3.0.image Pharo.image
              mv Pharo3.0.changes Pharo.changes
            ;;
            *) 
              $cmd get.pharo.org/vm30 | bash
              $cmd get.pharo.org/30 | bash
          esac
          ;;
        Pharo4.0)
          case "$PLATFORM" in
            MSYS_NT*|MINGW32_NT*|MINGW64_NT*)
              cmd=`which curl`
              $cmd -O http://files.pharo.org/platform/Pharo4.0-win.zip
              unzip -j -q Pharo4.0-win.zip
              mv Pharo4.0.image Pharo.image
              mv Pharo4.0.changes Pharo.changes
            ;;
            *) 
              $cmd get.pharo.org/vm40 | bash
              $cmd get.pharo.org/40 | bash
          esac
          ;;
        Pharo5.0)
          case "$PLATFORM" in
            MSYS_NT*|MINGW32_NT*|MINGW64_NT**)
              cmd=`which curl`
              $cmd -O http://files.pharo.org/platform/Pharo5.0-win.zip
              unzip -j -q Pharo5.0-win.zip
              mv Pharo5.0.image Pharo.image
              mv Pharo5.0.changes Pharo.changes
            ;;
            *) 
              $cmd get.pharo.org/vm50 | bash
              $cmd get.pharo.org/50 | bash
          esac
          ;;
        *) usage; exit_1_banner "Unknown Pharo version $version" ;;
      esac
      if [ -e "./Pharo.exe" ] ; then
#		script needs to run on Windows where we're not concerned about 32 bit libs
        echo "Windows needs no special OS prerequisites to run Pharo."
      else
        if [ -e "./pharo" ] ; then
          trap - ERR
missing_32-bit_libs() {
if [ -e "$GS_HOME/bin/.gsdevkitSetup" ] ; then
  exit_1_banner "The 32-bit libraries required by Pharo have not been installed on this system."
else
  exit_1_banner "The appropriate install script has not been run (installClient, installClientServer or installServer).. Please read the Installation Overview documentation (https://github.com/GsDevKit/GsDevKit_home/blob/master/docs/installation/README.md#installation-overview) for further details."
fi
}
          trap 'missing_32-bit_libs' ERR
          ./pharo --help --vm-display-null &> /dev/null 2>&1
          trap - ERR
          trap 'error ${LINENO}' ERR
        else
          exit_1_banner "Pharo download failed --- please try again"
	fi
      fi
    popd >& /dev/null
    ;;
  *) usage; exit_1_banner "Unsupported client Smalltalk $version";;
esac

exit_0_banner "...finished"
