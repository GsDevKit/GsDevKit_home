#! /usr/bin/env bash
#=========================================================================
# Copyright (c) 2019 GemTalk Systems, LLC <dhenrich@gemtalksystems.com>.
#
#   MIT license: https://github.com/GsDevKit/GsDevKit_home/blob/master/license.txt
#=========================================================================

theArgs="$*"
source "${GS_HOME}/bin/private/shFeedback"
start_banner

usage() {
  cat <<HELP
USAGE: $(basename $0) [-h] <target-stone-name>  <upgradeLogDir>

  Run pre-upgradeSeaseImage script for GemStone version 3.4.x and earlier.

OPTIONS
  -h
     display help

EXAMPLES
   $(basename $0) -h
   $(basename $0) gs_sample_331 "\$GS_HOME/server/stones/gs_sample_331/upgradeLogDir"
HELP
}

if [ $# -ne 2 ]; then
  usage; exit_1_banner "Two positional arguments are required"
fi

targetStoneName="$1"
upgradeLogDir="$2"

  # Patch BUG 46217 -- needed for 3.3.0 and pre-3.2.16 GemStone versions.
  echo "Install patch for Bug 46217"
  "$GS_HOME/bin/startTopaz" $targetStoneName -l -T50000 > $upgradeLogDir/topaz.out << EOF
  display resultcheck
  level 0

  display oops
  iferr 1 stk
  iferr 2 stack
  iferr 3 input pop
  iferr 4 exit 1

! need to patch the the Monticello bootstrap class  MCGemStonePlatform for Bug 46217
  set user SystemUser pass swordfish
  login
  
  run
| package symbolDict class theSymbolList gsVersion |
  gsVersion := System gemVersionAt: 'gsRelease'.
  (gsVersion matchPattern: #('3.2.' \$*))
    ifTrue: [
      (gsVersion matchPattern: #('3.2.1' \$*))
        ifTrue: [
          (gsVersion size > 5 and: [ #(\$7 \$8 \$9) includes: (gsVersion at: 6) ])
	    ifTrue: [
	      "GemStone version 3.2.16 or later - patch not needed"
	      ^ true ] ] ]
    ifFalse: [
      (gsVersion matchPattern: #('3.3.' \$*))
        ifTrue: [
          (gsVersion matchPattern: #('3.3.0' \$*))
            ifFalse: [ 
	      "GemStone 3.3.1 or later patch not needed"
	      ^ true ] ]
	ifFalse: [ 
	  "no patch available for GemStone versions preceding 3.2.x"
	  ^true ] ].
  "patch needed: 3.2.0 thru 3.2.15, and 3.3.0"
  package := GsPackageLibrary packageNamed: #'Monticello_Globals'.
  symbolDict := package symbolDict.
  class := symbolDict at: #'MCGemStonePlatform'.
  theSymbolList := GsCurrentSession currentSession symbolList.
  class
    compileMethod: 'removeClassFromSystem: aClass

  ((GsSession currentSession objectNamed: #UserGlobals) 
      at: #''GS_BOOTSTRAP_MONTICELLO_SKIP_REMOVE_CLASS'' ifAbsent: [ false ]) 
    ifTrue: [
      "Bug 46217 - during bootstrap don''t remove any classes.
        during initial bootstrap no classes will be removed
        during upgrade unexpected classes should not be removed during the
          bootstrap operation" ]
    ifFalse: [
	| ar |
	aClass subclasses isEmpty not ifTrue: [ ^self error: ''class has subclasses'' ].
	ar := System myUserProfile dictionaryAndSymbolOf: aClass.
	ar ifNil: [ ^self error: ''class not found in current user profile'' ].
	(ar at: 1) removeKey: (ar at: 2) ]'
    dictionaries: theSymbolList
    category: #'patch bug 46217'
    intoMethodDict: nil
    intoCategories: nil
    intoPragmas: {}
    environmentId: 0.
  true
%
  commit
  logout

  exit 0
EOF

"$GS_HOME/bin/startTopaz" $targetStoneName -l -T50000 >> $upgradeLogDir/topaz.out << EOF
  display resultcheck
  level 0

  display oops
  iferr 1 stk
  iferr 2 stack
  iferr 3 input pop
  iferr 4 exit 1
  login

  run
  "Bug 46217 - add for versions pre-dating 3.2.16 and 3.3.0"
  UserGlobals at: #'GS_BOOTSTRAP_MONTICELLO_SKIP_REMOVE_CLASS' put: true.
  true
%
  commit
  logout

  exit 0
EOF
 
  # Clear SystemLoginNotification #Subscriptions class variable
  echo "STARTING clear SystemLoginNotification #Subscriptions class variable"
  "$GS_HOME/bin/startTopaz" $targetStoneName -l -T50000 >> $upgradeLogDir/topaz.out << EOF
  
  display resultcheck
  level 0

  login
  
  display oops
  iferr 1 stk
  iferr 2 stack
  iferr 3 input pop
  iferr 4 exit 1
  
  run
  (SystemLoginNotification _classVars at: #'Subscriptions') removeAll: (SystemLoginNotification _classVars at: #'Subscriptions').
  true
%
  commit

! patch for Issue #71 (GemStone bug 46059)
  run
  GsPackageLibrary 
    installMonticelloPackagesHome: (GsCurrentSession currentSession objectNamed: #'UserGlobals') 
    during: [:globals | 
      Class
        compileMethod: 'removeFromSystem
  | ar |
  ar := System myUserProfile dictionaryAndSymbolOf: self.
  ar ifNotNil: [ (ar at: 1) removeKey: (ar at: 2) ].'
	dictionaries: GsCurrentSession currentSession symbolList
	category: '*change-notification'
    ].
  true
%
  commit

  
  logout
  exit 0
EOF

  # Setting BootstrapApplicationPostloadClassList (see https://github.com/GsDevKit/GsDevKit_home/issues/52)
  echo "Starting set BootstrapApplicationPostloadClassList"
  "$GS_HOME/bin/startTopaz" $targetStoneName -l -T50000 >> $upgradeLogDir/topaz.out << EOF
  
  display resultcheck
  level 0
  
  login
  
  display oops
  iferr 1 stk
  iferr 2 stack
  iferr 3 input pop
  iferr 4 exit 1
  
  run
  UserGlobals at: #BootstrapApplicationPostloadClassList put: #( #SecureHashAlgorithm #MCFileTreeFileDirectoryUtils ).
  true
%
  commit
  
  logout
  exit 0
EOF

exit_0_banner "...finished"
