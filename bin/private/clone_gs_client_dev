#! /usr/bin/env bash
#=========================================================================
# Copyright (c) 2015, 2016 GemTalk Systems, LLC <dhenrich@gemtalksystems.com>.
#
#   MIT license: https://github.com/GsDevKit/GsDevKit_home/blob/master/license.txt
#=========================================================================

theArgs="$*"
source "${GS_HOME}/bin/private/shFeedback"
start_banner

usage() {
  cat <<HELP
USAGE: $(basename $0) [-h] [-c https | ssh ] [-o <organization-name>]


OPTIONS
  -h
     display help
  -c https | ssh
     clone using https (https://github.com) or ssh (git@github.com).
     https is the default.
  -o <organization-name>
     use <organization-name> instead of GsDevKit. Use this option when
     you've cloned the todeClient project

EXAMPLES
   $(basename $0) -h
   $(basename $0) 
   $(basename $0) -c ssh
   $(basename $0) -c https

HELP
}

if [ "${GS_HOME}x" = "x" ] ; then
  exit_1_banner "the GS_HOME environment variable needs to be defined"
fi
source "${GS_HOME}/bin/defGsDevKit.env"

modeArg=""
organization="GsDevKit"
while getopts "hc:o:" OPT ; do
  case "$OPT" in
    h) usage; exit 0;;
    c) modeArg=" -c ${OPTARG} ";;
    o) organization="${OPTARG}";;
    *) usage; exit_1_banner "Uknown option";;
  esac
done
shift $(($OPTIND - 1))

source "${GS_HOME}/bin/private/gitFunctions"

if [ "${GS_CLIENT_DEV}x" = "x" ] ; then
	export GS_CLIENT_DEV="$GS_HOME/dev"
fi

pushd "${GS_HOME}" >& /dev/null
  "${GS_HOME}/bin/private/cloneGitHubProject" $modeArg $organization GsDevKit_gs_client_dev dev
  checkoutClone "$GSDEVKIT_DEV_GIT_CHECKOUT" "$GS_CLIENT_DEV"
popd >& /dev/null

exit_0_banner "...finished"
