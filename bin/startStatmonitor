#! /usr/bin/env bash
#=========================================================================
# Copyright (c) 2014, 2015, 2016 GemTalk Systems, LLC <dhenrich@gemtalksystems.com>.
#
#   MIT license: https://github.com/GsDevKit/GsDevKit_home/blob/master/license.txt
#=========================================================================

theArgs="$*"
source "${GS_HOME}/bin/private/shFeedback"
start_banner

usage() {
  cat <<HELP
USAGE: $(basename $0) [-h] <stone-name>

Start statmonitor for the given stone. Two statmonitors are
started. One that collects a sample every second and is
restarted every hour. One that collects a sample once a
minute and is restarted once a day.

OPTIONS
  -h display help

EXAMPLES
  $(basename $0) -h
  $(basename $0) gs_326

HELP
}

PLATFORM="`uname -sm | tr ' ' '-'`"
if [[ "$PLATFORM" == MINGW32_NT* || "$PLATFORM" == MSYS_NT* ]] ; then
  exit_1_banner "This script is a server-only script and cannot be used on Windows"
fi

if [ "${GS_HOME}x" = "x" ] ; then
  exit_1_banner "the GS_HOME environment variable needs to be defined"
fi
source "${GS_HOME}/bin/defGsDevKit.env"

source "${GS_HOME}/bin/private/shFunctions"
getOpts_help $@

if [ $# -ne 1 ]; then
  usage; exit_1_banner "Missing required argument"
fi
stoneName=$1

# set up stone environment
stonePath="$GS_SERVER_STONES/$stoneName"

if [ ! -d "$stonePath" ] ; then
  exit_1_banner "The stone $stoneName does not exist"
fi

pushd "$stonePath" >& /dev/null
  source "$stonePath/stone.env"
popd >& /dev/null

# start the statmonitors
cd "$stonePath/stats/1-second"
"$stonePath/product/bin/statmonitor" $stoneName -Arzq -h 1 -i 1 -u 0 &
cd ../60-second
"$stonePath/product/bin/statmonitor" $stoneName -Arzq -h 24 -i 60 -u 0 &

exit_0_banner "...finished"
