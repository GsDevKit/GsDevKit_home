#! /usr/bin/env bash
#=========================================================================
# Copyright (c) 2018 GemTalk Systems, LLC <dhenrich@gemtalksystems.com>.
#
#   MIT license: https://github.com/GsDevKit/GsDevKit_home/blob/master/license.txt
#=========================================================================

theArgs="$*"
source ${GS_HOME}/bin/private/shFeedback
start_banner

usage() {
  cat <<HELP
USAGE: $(basename $0) [-h] <stone-name> <gemstone-version>
Bootstrap Rowan (https://github.com/dalehenrich/Rowan) into an extent0.dbf.

OPTIONS
  -h
     display help

EXAMPLES
   $(basename $0) -h
   $(basename $0) gs_3215

HELP
}

if [ "${GS_HOME}x" = "x" ] ; then
  exit_1_banner "the GS_HOME environment variable needs to be defined"
fi
source ${GS_HOME}/bin/defGsDevKit.env

source ${GS_HOME}/bin/private/shFunctions
getOpts_help $@

if [ $# -ne 2 ]; then
  usage; exit_1_banner "wrong number of arguments (2 expected)"
fi
stoneName=$1
shift 1
vers=$1
shift 1


warning_banner "========================================="
warning_banner "========================================="
warning_banner "This is an experimental feature - not recommended for production use"
warning_banner "========================================="
warning_banner "========================================="

stonePath=$GS_SERVER_STONES/$stoneName
if [ ! -d "$stonePath" ] ; then
  exit_1_banner "The stone $stoneName does not exist"
fi

if [ "${GS_SYS_LOCAL}x" = "x" ] ; then
  $GS_HOME/bin/private/clone_sys_local
  source ${GS_HOME}/bin/defGsDevKit.env
fi

export ROWAN_PROJECTS_HOME="$GS_HOME/shared/repos"
$GS_HOME/bin/startStone -b $stoneName

# set up stone environment
pushd $stonePath $stonePath >& /dev/null
  source $stonePath/stone.env
popd >& /dev/null

# ensure that the Rowan git repo is present
if [ ! -d "$GS_HOME/shared/repos/Rowan" ] ; then
  exit_1_banner "\$GS_HOME/shared/repos/Rowan must be pre-installed"
fi

$GS_HOME/shared/repos/Rowan/platforms/gemstone/topaz/${vers}/installRowan $stoneName

warning_banner "========================================="
warning_banner "========================================="
warning_banner "This is an experimental feature - not recommended for production use"
warning_banner "========================================="
warning_banner "========================================="

exit_0_banner "...finished $(basename $0)"
