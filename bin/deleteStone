#! /usr/bin/env bash
#=========================================================================
# Copyright (c) 2015 GemTalk Systems, LLC <dhenrich@gemtalksystems.com>.
#
#   MIT license: https://github.com/GsDevKit/GsDevKit_home/blob/master/license.txt
#=========================================================================

theArgs="$*"
source "${GS_HOME}/bin/private/shFeedback"
start_banner

usage() {
  cat <<HELP
USAGE: $(basename $0) [-h] <stone-name>...

Delete the stone with the given name. The stone is stopped before the 
\$GS_SERVER/stones/<stone-name> directory is deleted. The 
\$GS_HOME/tode/sys/stone/<stone-name> directory is deleted as well as the
\$GS_HOME/tode/sys/local/client/descriptions/<stone-name> description file
is deleted.

OPTIONS
  -h
     display help

EXAMPLES
  $(basename $0) -h
  $(basename $0) gs_326
  $(basename $0) gs_326 seaside_329

HELP
}

PLATFORM="`uname -sm | tr ' ' '-'`"
if [[ "$PLATFORM" == MINGW32_NT* || "$PLATFORM" == MSYS_NT* ]] ; then
  exit_1_banner "This script is a server-only script and cannot be used on Windows"
fi

if [ "${GS_HOME}x" = "x" ] ; then
  exit_1_banner "the GS_HOME environment variable needs to be defined"
fi
source "${GS_HOME}/bin/defGsDevKit.env"

source "${GS_HOME}/bin/private/shFunctions"
getOpts_help $@

if [ $# -lt 1 ]; then
  usage; exit_1_banner "missing stone name args"
fi

for stoneName in "$@"
do
  if [ "${GS_SERVER}x" !=  "x" ] ; then
    echo "deleting old instance of stone $stoneName (stopping stone and netldi first)"
    if [ -d "$GS_SERVER_STONES/$stoneName" ] ; then
      "$GS_HOME/bin/stopStone" -b $stoneName
      rm -rf "$GS_SERVER_STONES/$stoneName"
    fi
  fi

  if [ -d "$GS_SYS_STONES/$stoneName" ] ; then
    rm -rf "$GS_SYS_STONES/$stoneName"
  fi

  if [ -e "$GS_SYS_SESSIONS/$stoneName" ] ; then
    rm -rf "$GS_SYS_SESSIONS/$stoneName"
  fi
done

exit_0_banner "...finished"
