#! /usr/bin/env bash
#=========================================================================
# Copyright (c) 2015, 2016 GemTalk Systems, LLC <dhenrich@gemtalksystems.com>.
#
#   MIT license: https://github.com/GsDevKit/GsDevKit_home/blob/master/license.txt
#=========================================================================

theArgs="$*"
source "${GS_HOME}/bin/private/shFeedback"
start_banner

usage() {
  cat <<HELP
USAGE: $(basename $0) [-h] [-D] <stone-name> <tode-command-line>

Execute the <tode-command-line> as a tODE shell command.

tODE must be installed in the named stone.

OPTIONS
  -h show usage
  -D launch command line image for interactive debugging

EXAMPLES
  $(basename $0) -h
  $(basename $0) -D gs_326 project load Seaside3
  $(basename $0) gs_326 project load Seaside3
  $(basename $0) gs_326 eval \`3+4\`
  $(basename $0) gs_326 eval \`3+4\`\; eval \`self == 7 ifFalse: [ System logout ]\`

HELP
}

PLATFORM="`uname -sm | tr ' ' '-'`"
if [[ "$PLATFORM" == MINGW32_NT* || "$PLATFORM" == MSYS_NT* ]] ; then
  exit_1_banner "This script is a server-only script and cannot be used on Windows"
fi

if [ "${GS_HOME}x" = "x" ] ; then
  exit_1_banner "the GS_HOME environment variable needs to be defined"
fi

interactiveArg=""
while getopts "hD" OPT ; do
  case "$OPT" in
    h) usage; exit 0;;
    D) interactiveArg=" -D ";;
    *) usage; exit_1_banner "Unknown option";;
  esac
done
shift $(($OPTIND - 1))

stoneName="$1"
shift

# do tODE shell command
echo "performing tode command: __$*__"
"$GS_HOME/bin/private/gsDevKitTodeCommandLine" $interactiveArg todeIt $stoneName << EOF
$*
EOF
echo "" # todeIt output tends to be missing trailing LF
exit_0_banner "...finished"
