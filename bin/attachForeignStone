#! /usr/bin/env bash
#=========================================================================
# Copyright (c) 2015 GemTalk Systems, LLC <dhenrich@gemtalksystems.com>.
#
#   MIT license: https://github.com/GsDevKit/GsDevKit_home/blob/master/license.txt
#=========================================================================

theArgs="$*"
source "${GS_HOME}/bin/private/shFeedback"
start_banner 

usage() {
  cat <<HELP
USAGE: $(basename $0) [-h] <stone-name> <gemstone-version>

Create a foreign stone entry in the stone list. The foreign stone will not be
managed by GsDevKitHome, but clients will be able to connect to the stone.

This script creates a dummy entry in the \$GS_SERVER_STONES directory using the
given <stone-name>. 

An empty session description is created in the \$GS_SHARED_SESSIONS directory.
Edit the session description file to match the actual foreign stone you want
to connect.

OPTIONS
  -h
     display help

EXAMPLES
  $(basename $0) -h
  $(basename $0) gs_3106 3.1.0.6

HELP
}

PLATFORM="`uname -sm | tr ' ' '-'`"
if [[ "$PLATFORM" == MINGW32_NT* || "$PLATFORM" == MSYS_NT* || "$PLATFORM" == MINGW64_NT* ]] ; then
  exit_1_banner "This script is a server-only script and cannot be used on Windows"
fi

if [ "${GS_HOME}x" = "x" ] ; then
  exit_1_banner "the GS_HOME environment variable needs to be defined"
fi
source "${GS_HOME}/bin/defGsDevKit.env"

source "${GS_HOME}/bin/private/shFunctions"
getOpts_help $@

if [ $# -ne 2 ]; then
  usage; exit_1_banner "Two positional arguments required."
fi
stoneName=$1
vers=$2

"$GS_HOME/bin/private/attachStone" -f $stoneName $vers

exit_0_banner "...finished"
