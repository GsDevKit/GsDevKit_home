#! /usr/bin/env bash
#=========================================================================
# Copyright (c) 2016 GemTalk Systems, LLC <dhenrich@gemtalksystems.com>.
#
#   MIT license: https://github.com/GsDevKit/GsDevKit_home/blob/master/license.txt
#=========================================================================

theArgs="$*"
source ${GS_HOME}/bin/private/shFeedback
start_banner

usage() {
  cat <<HELP
USAGE: $(basename $0) [-h] [-r] [-t <tode-snapshot-file-path>] -z <smalltalkCI-smalltalk.ston-path>
                      <stone-name>

Copy a new extent into the named stone's extent directory using the snapshot 
file specified by the -t option (\$GS_HOME/server/stones/<stone-name>/snapshots/extent0.tode.dbf
by default), load the project specified by the -z option
into the stone. 

Optionally run the tests specified by the -z option if the -r option is present.

Similar to \$GS_HOME/bin/newExtent, the stone will be stopped before doing the 
copy and after the copy is complete, the stone will be restarted with the -N option.

The -z option is required.

The stone is left running after the tests have completed.

OPTIONS
  -h
     display help
  -r 
     Run the tests specified in the -z options.
  -t <tode-snapshot-file-path>
     Path to snapshot file used to create stone. It is assumed that the snapshot
     already has tODE installed and the snapshot will be attached to the
     existing \$GS_TODE/sys/stones/<stone-name> structure.
  -z <smalltalkCI-smalltalk.ston-path>
     Customize the stone installation according to the attrbutes specified in the 
     <smalltalkCI-smalltalk.ston-path> file.

EXAMPLES
  $(basename $0) -h
  $(basename $0) -r -z \$GS_HOME/sys/local/server/templates/myStoneConfig.ston gs_329
  $(basename $0) -t \$GS_HOME/server/snapshots/extent0.tode.3.2.4.dbf -z \$GS_HOME/sys/local/server/templates/myStoneConfig.ston gs_329
  $(basename $0) -r -t \$GS_HOME/server/snapshots/extent0.tode.3.2.4.dbf -z \$GS_HOME/sys/local/server/templates/myStoneConfig.ston gs_329 

HELP
}

PLATFORM="`uname -sm | tr ' ' '-'`"
if [[ "$PLATFORM" == MINGW32_NT* || "$PLATFORM" == MSYS_NT* ]] ; then
  exit_1_banner "This script is a server-only script and cannot be used on Windows"
fi

if [ "${GS_HOME}x" = "x" ] ; then
  exit_1_banner "the GS_HOME environment variable needs to be defined"
fi
source ${GS_HOME}/bin/defGsDevKit.env

source ${GS_HOME}/bin/private/shFunctions
verify_gsdevkit_installation

snapshotFileArg=""
smalltalkCIConfigPath=""
runSmalltalkCITests="false"
while getopts "ht:z:r" OPT ; do
  case "$OPT" in
    h) usage; exit 0;;
    t) snapshotFileArg=" -s ${OPTARG} ";;
    z) smalltalkCIConfigPath="${OPTARG}";;
    r) runSmalltalkCITests="true";;
    *) usage; exit_1_banner "Unknown option";;
  esac
done
shift $(($OPTIND - 1))

if [ $# -lt 1 ]; then
  usage; exit_1_banner "incorrect number of args $# (1 expected)"
fi
stoneName="$1"

if [ "${snapshotFileArg}x" = "x" ] ; then
  $GS_HOME/bin/newExtent -a -s "$GS_HOME/server/stones/${stoneName}/snapshots/extent0.tode.dbf" $stoneName
else
  $GS_HOME/bin/newExtent -a $snapshotFileArg $stoneName
fi

${GS_HOME}/bin/devKitCommandLine serverDoIt  $stoneName << EOF
  GsDeployer bulkMigrate: [
    [
    Metacello new
      baseline: 'SmalltalkCI';
      repository: '${GS_SHARED_REPO_SMALLTALKCI}';
      onConflict: [:ex | ex allow ];
      onLock: [:ex | ex disallow ];
      load ] on: Warning do: [:w | w resume ].
    (Smalltalk at: #SmalltalkCI) load: '${smalltalkCIConfigPath}'.
  ].

EOF

if [ "${runSmalltalkCITests}" = "true" ]; then
  if [ ! -d "$GS_HOME/server/stones/${stoneName}/ci" ] ; then
    mkdir "$GS_HOME/server/stones/${stoneName}/ci"
  fi
  ${GS_HOME}/bin/startTopaz "${stoneName}" -l -T 100000 << EOF
  login
  run
    SmalltalkCIGemstone 
      test: '${smalltalkCIConfigPath}'
      xmlLogDirPath: '$GS_HOME/server/stones/${stoneName}/ci'
%
  logout
  exit 0
EOF
fi

exit_0_banner "...finished"
