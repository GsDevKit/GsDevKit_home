#! /usr/bin/env bash
#=========================================================================
# Copyright (c) 2014, 2015, 2016 GemTalk Systems, LLC <dhenrich@gemtalksystems.com>.
#
#   MIT license: https://github.com/GsDevKit/GsDevKit_home/blob/master/license.txt
#=========================================================================
#
#	this script is funcationally equivalent to startTopaz, except that the start
#	banner, exit banner and error banner (for the topaz execution) are not used.
#	we want stdout to be as clean as possible when using this script to run topaz.
#

theArgs="$*"
source "${GS_HOME}/bin/private/shFeedback"

usage() {
  cat <<HELP
USAGE: $(basename $0) [-h] <stone-name> [<topaz-commandLine-args>]

Run topaz for the given stone.... intended to be used with topaz shebang scripts
(https://github.com/dalehenrich/stash) as the start and stop banners are not present.

OPTIONS
  -h 
     display help

EXAMPLES
  $(basename $0) -h
  $(basename $0) gs_329 -l -T 50000
  $(basename $0) gs_329

HELP
}

source "${GS_HOME}/bin/private/shFunctions"
getOpts_help $@

if [ $# -lt 1 ]; then
  usage; exit_1_banner "missing required <stone-name>"
fi

stoneName=$1
shift 1

source "${GS_HOME}/bin/defGsDevKit.env"
stonePath="$GS_SERVER_STONES/$stoneName"

if [ ! -d "$stonePath" ] ; then
  exit_1_banner "The stone $stoneName does not exist"
fi

# set up stone environment
pushd "$stonePath" >& /dev/null
  source "$stonePath/stone.env"
popd >& /dev/null

trap - ERR	# disable trap when running topaz
"$GEMSTONE/bin/topaz" -I "$stonePath/.topazini" $*
