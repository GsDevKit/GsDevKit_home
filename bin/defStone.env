#=========================================================================
# Copyright (c) 2014, 2015 GemTalk Systems, LLC <dhenrich@gemtalksystems.com>.
#
#=========================================================================
 
if [ "${1}x" = "x" ] ; then
  stonePath=$(pwd)
else
  # hard-wire path from $GS_HOME to avoid polluting user's env with $GS_* vars
  # defined by defGsDevKit.env ... 
  stonePath="$GS_SERVER_STONES/$1"
fi
path="$stonePath/stone.env"
if [ -r "$path" ]; then
    pushd "$stonePath" >& /dev/null
    . "$path"
    popd >& /dev/null
    # Compute the length of the $GEMSTONE environment variable
    GS_LEN=${#GEMSTONE}
    STONE_LEN=${#stonePath}

    ## Gemstone, Seaside, and stone program paths
    #    with $stonePath/bin first, you can override any
    #    gemstone scripts on a stone by stone basis
    if [[ "${PATH:0:$STONE_LEN}" != "${stonePath}" ]] ; then
        export PATH="$stonePath/bin":"$GEMSTONE/bin":"$GEMSTONE/seaside/bin":$PATH
    fi

    ## Gemstone library path
    if [[ "${LD_LIBRARY_PATH:0:$GS_LEN}" != "${GEMSTONE"} ]] ; then
        export LD_LIBRARY_PATH="$GEMSTONE/lib":$LD_LIBRARY_PATH
    fi
    ### MacOSX library path is different
    if [[ "${DYLD_LIBRARY_PATH:0:$GS_LEN}" != "${GEMSTONE}" ]] ; then
        export DYLD_LIBRARY_PATH="$GEMSTONE/lib":$DYLD_LIBRARY_PATH
    fi

    ## Gemstone manpages
    if [[ "${MANPATH:0:$GS_LEN}" != "$GEMSTONE" ]] ; then
        export MANPATH="$GEMSTONE/doc":$MANPATH
    fi

else
    echo 'defStone: WARNING - Your GEMSTONE environment variables have not been set!'
    echo "defStone: Missing env file $path"
    echo "Make sure you've passed in the stone name as an argument"
    echo ' and that $GS_HOME is defined'
fi

