#!/usr/bin/env superdoit_stone
#
#	copy (or symbolically link) me to $GS_HOME/stones/<stone-name>/bin
#		and I will be executed in that stone when run
#
options
{
  SuperDoitCommandLineOption long: 'help' short: 'h'.
  SuperDoitCommandLineOption long: 'debug' short: 'D'.
}
%
usage
-----
USAGE $basename [--help | -h] [--debug | -D] [-- [<stone-name> [<topaz-command-line-args>] ] ]

DESCRIPTION
  Evaluate the Smalltalk expression: 3+4 and return the result on stdout.

OPTIONS
  <stone-name>               Name of the GsDevKit_home stone. <stone-name> argument
                             may be skipped if the script is run in a GsDevKit_home
                             stone directory (i.e., $GS_HOME/server/stones/<stone-name>
  <topaz-command-line-args>  topaz options that should be passed to topaz when running
                             running the script
  -h, --help                 display usage message
  -D, --debug                bring up topaz debugger in the event of a script error

EXAMPLES
  $basename --help
  $basename -h
  $basename --debug
  $basename -D
  $basename
  $basename -- gs_360
  $basename -- gs_360 -T 100000
-----
%
method
getAndVerifyOptions
		self getOpts: self optionSpecs.
		self help ifTrue: [ ^ self usage ].
%
doit
	[
		self getAndVerifyOptions == self noResult
			ifTrue: [ ^ self noResult ].
		
		self stdout nextPutAll: '--------------------'; lf.
		self stdout nextPutAll: 'Stone Version Report for ', self stoneName printString; lf.
		self stdout nextPutAll: '--------------------'; lf.
		System stoneVersionReport keysAndValuesDo: [:key :value |
			self stdout
				nextPutAll: key asString ; lf; tab; nextPutAll: ' = ', value asString; lf ].
		self stdout nextPutAll: '--------------------'; lf.

		^ self noResult
	] on: Error do: [:ex | 
		self debug ifTrue: [ ex pass ].
		self exit: ex description withStatus: 1 "does not return" ].
%
